<%
/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
(function () {
    if (!user) {
        response.sendError(401, 'unauthorized to access assets');
        return;
    }
    var log = new Log();
    var dataBaseUtils = require('/modules/database-utils.js');
    var dashboards = require('/modules/dashboards.js');
    var task = request.getParameter('task');
    var INSERT_TASK = 'insert';
    var DELETE_TASK = 'delete';
    var USAGE_TASK = 'usage';
    var DEFECTIVE_USAGE_TASK = 'getDefectivePages';
    var STATUS_UPDATE_TASK = 'stateupdate';
    var matcher = new URIMatcher(request.getRequestURI());
    var i18n = require('i18n');
    var content = request.getContent();
    var gadgetId;
    var dashboardId;
    i18n.init(request, utils.getLocaleResourcePath());

    if (request.getMethod() === 'POST') {
        if (matcher.match('/database/{did}/{gid}') || matcher.match('/database/{did}$/{gid}')) {
            gadgetId = matcher.elements().gid;
            dashboardId = matcher.elements().did;

            if (matcher.match('/database/{did}$/{gid}')) {
                dashboardId = dashboardId + '$';
            }
            if (task === INSERT_TASK) {
                var state = request.getParameter('state');
                dataBaseUtils.insertOrUpdateGadgetUsage(dashboardId, gadgetId, content, state);
            } else {
                if (log.isDebugEnabled()) {
                    log.debug("Cannot understand the request " + request.getRequestURI());
                }
                response.sendError(400, i18n.localize("bad.request"));
            }
        } else if (matcher.match('/database/{gid}')) {
            gadgetId = matcher.elements().gid;
            if (task === STATUS_UPDATE_TASK) {
                dataBaseUtils.updateGadgetState(gadgetId, content);
            }
        } else {
            if (log.isDebugEnabled()) {
                log.debug("Cannot understand the request " + request.getRequestURI());
            }
            response.sendError(400, i18n.localize("bad.request"));
        }
    } else if (request.getMethod() === 'GET') {
        if (matcher.match('/database/{did}/{gid}') || matcher.match('/database/{did}$/{gid}')) {
            dashboardId = matcher.elements().did;
            gadgetId = matcher.elements().gid;
            if (matcher.match('/database/{did}$/{gid}')) {
                dashboardId = dashboardId + '$';
            }
            var gadgetUsageInfo = dataBaseUtils.getGadgetUsageInfoOfADashboard(dashboardId, gadgetId);
            print(gadgetUsageInfo);
        } else if (matcher.match('/database/{gid}') || matcher.match('/database/{gid}$')) {
            gadgetId = matcher.elements().gid;
            if (task === USAGE_TASK) {
                var gadgetUsageInfo = dataBaseUtils.getGadgetUsage(gadgetId);
                print(gadgetUsageInfo);
            } else if (task === DEFECTIVE_USAGE_TASK) {
                if (matcher.match('/database/{gid}$')) {
                    gadgetId = gadgetId + '$';
                }
                var usageInfo = dataBaseUtils.checkDefectivePages(gadgetId);
                print(usageInfo);
            }
        }
    } else if (request.getMethod() === 'DELETE') {
        if (matcher.match('/database/{did}/{gid}') || matcher.match('/database/{did}$/{gid}')) {
            gadgetId = matcher.elements().gid;
            dashboardId = matcher.elements().did;
            if (matcher.match('/database/{did}$/{gid}')) {
                dashboardId = dashboardId + '$';
            }
            if (task === DELETE_TASK) {
                dataBaseUtils.deleteGadgetUsage(dashboardId, gadgetId);
            }
        } else if (matcher.match('/database/{did}')) {
            dashboardId = matcher.elements().did;
            dataBaseUtils.updateAfterDeletingDashboard(dashboardId);
        }
    } else if (request.getMethod() === 'PUT') {
        if (matcher.match('/database/{did}')) {
            dashboardId = matcher.elements().did;
            var dashboard = dashboards.getAsset(dashboardId);
            if (!dashboard) {
                response.sendError(404, JSON.stringify({
                    error: i18n.localize('dashboard.not.found')
                }));
                return;
            }
            dashboardId = dashboardId + (dashboard.isUserCustom ? '$' : '');
            dataBaseUtils.updateAfterDeletingDashboard(dashboardId);
            dashboards.updateGadgetUsageInDashboard(dashboard, dashboardId);
        }
    } else {
        response.sendError(405, i18n.localize("cannot.understand.method"));
    }
}());
%>